<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>IEEE ESL | Computer System Architecture Lab</title>
    <link>https://ku-csarch.github.io/tag/ieee-esl/</link>
      <atom:link href="https://ku-csarch.github.io/tag/ieee-esl/index.xml" rel="self" type="application/rss+xml" />
    <description>IEEE ESL</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 21 Oct 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://ku-csarch.github.io/media/icon_hufc4ea502f7977d2b250399d95297f953_357528_512x512_fill_lanczos_center_3.png</url>
      <title>IEEE ESL</title>
      <link>https://ku-csarch.github.io/tag/ieee-esl/</link>
    </image>
    
    <item>
      <title>One paper accepted to IEEE Embedded Systems Letters (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-esl24_1/</link>
      <pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-esl24_1/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Embedded Systems Letters&lt;/em&gt;. Our paper presents a software approach that can optimize thread allocation for merged and fused kernels in multi-tenant inference tasks in embedded GPU systems. Our proposed apporach identifies the best-performing thread counts based on the performance modeling to improve hardware utiliztion while ensuring QoS compilance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Embedded Systems Letters (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-esl24/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-esl24/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Embedded Systems Letters&lt;/em&gt;. Our paper presents a kernel merge and fusion technique for multiple inference tasks in embedded GPU systems. By applying the proposed kernel merge and fusion techniques, our proposed approach can reduce the number of concurrent kernels to improve the throughput of an embedded GPU system.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

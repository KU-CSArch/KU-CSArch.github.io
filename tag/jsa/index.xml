<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSA | Computer System Architecture Lab</title>
    <link>https://ku-csarch.github.io/tag/jsa/</link>
      <atom:link href="https://ku-csarch.github.io/tag/jsa/index.xml" rel="self" type="application/rss+xml" />
    <description>JSA</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 15 Dec 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://ku-csarch.github.io/media/icon_hufc4ea502f7977d2b250399d95297f953_357528_512x512_fill_lanczos_center_3.png</url>
      <title>JSA</title>
      <link>https://ku-csarch.github.io/tag/jsa/</link>
    </image>
    
    <item>
      <title>One paper accepted to Journal of System Architecture (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-jsa24_1/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-jsa24_1/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;Journal of System Architecture&lt;/em&gt;. Our paper presents an efficient prefetching approach for Transformer workload on GPU&amp;rsquo;s unified virtual memory (UVM). Our analysis results reveal the default tree-based neighborhood prefetcher in UVM cannot handle the data locality over one virtual address block (VABlock). By extending the range of prefetching to multiple VABlocks, our proposed approach can improve the performance of Transformer workload when GPU memory is oversubscribed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to Journal of System Architecture (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-jsa24/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-jsa24/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;Journal of System Architecture&lt;/em&gt;. Our paper presents a conflict-aware compilation approach for hierarchical register file on GPUs. By optimizing register assignments based on approximated register write counts, our proposed approach can improve the peformance of GPUs equipped with non-volatile memory-based hierarchical register file.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>

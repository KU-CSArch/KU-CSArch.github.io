<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Accepted | Computer System Architecture Lab</title>
    <link>https://ku-csarch.github.io/tag/accepted/</link>
      <atom:link href="https://ku-csarch.github.io/tag/accepted/index.xml" rel="self" type="application/rss+xml" />
    <description>Accepted</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sat, 12 Apr 2025 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://ku-csarch.github.io/media/icon_hufc4ea502f7977d2b250399d95297f953_357528_512x512_fill_lanczos_center_3.png</url>
      <title>Accepted</title>
      <link>https://ku-csarch.github.io/tag/accepted/</link>
    </image>
    
    <item>
      <title>One paper accepted to ICS 2025</title>
      <link>https://ku-csarch.github.io/post/accepted-ics25/</link>
      <pubDate>Sat, 12 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-ics25/</guid>
      <description>&lt;p&gt;One papers was accepted to the &lt;em&gt;ACM International Conference on Supercomputing (ICS) 2025&lt;/em&gt;. Our paper proposes &lt;em&gt;SparsePIM&lt;/em&gt;, an efficient HBM-based PIM architecture for SpMV kernels. &lt;em&gt;SparsePIM&lt;/em&gt; includes an efficient hardware architecture for SpMV computations and a sparse data allocation scheme in DRAM row. &lt;em&gt;SparsePIM&lt;/em&gt; also employ software-base optimizations to balance computation burdens acress multiple bank groups. By combiging hardware and software approaches, &lt;em&gt;SparsePIM&lt;/em&gt; can improve SpMV computations dramatically on HBM-based PIM architecture.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to ISPASS 2025</title>
      <link>https://ku-csarch.github.io/post/accepted-ispass25/</link>
      <pubDate>Tue, 04 Mar 2025 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-ispass25/</guid>
      <description>&lt;p&gt;One papers was accepted to the &lt;em&gt;2025 IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS)&lt;/em&gt;. Our paper proposes hierarchical traversal stack design approach using shared memory for GPU ray tracing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to Journal of System Architecture (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-jsa24_1/</link>
      <pubDate>Sun, 15 Dec 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-jsa24_1/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;Journal of System Architecture&lt;/em&gt;. Our paper presents an efficient prefetching approach for Transformer workload on GPU&amp;rsquo;s unified virtual memory (UVM). Our analysis results reveal the default tree-based neighborhood prefetcher in UVM cannot handle the data locality over one virtual address block (VABlock). By extending the range of prefetching to multiple VABlocks, our proposed approach can improve the performance of Transformer workload when GPU memory is oversubscribed.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to DATE 2025</title>
      <link>https://ku-csarch.github.io/post/accepted-date25/</link>
      <pubDate>Tue, 19 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-date25/</guid>
      <description>&lt;p&gt;One papers was accepted to the &lt;em&gt;Design, Automation and Test in Europe Conference (DATE) 2025&lt;/em&gt;. Our paper proposes &lt;em&gt;HyMM&lt;/em&gt;, an efficient sparse-dense matrix multiplication accelerator architecture for GCNs. &lt;em&gt;HyMM&lt;/em&gt; implements a hybrid sparse-dense matrix multiplication dataflow to exploit the data locality observed in graph structures in GCNs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Embedded Systems Letters (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-esl24_1/</link>
      <pubDate>Mon, 21 Oct 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-esl24_1/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Embedded Systems Letters&lt;/em&gt;. Our paper presents a software approach that can optimize thread allocation for merged and fused kernels in multi-tenant inference tasks in embedded GPU systems. Our proposed apporach identifies the best-performing thread counts based on the performance modeling to improve hardware utiliztion while ensuring QoS compilance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to ICPP 2024</title>
      <link>https://ku-csarch.github.io/post/accepted-icpp24/</link>
      <pubDate>Tue, 11 Jun 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-icpp24/</guid>
      <description>&lt;p&gt;One paper was accepted to the &lt;em&gt;53nd International Conference on Parallel Processing (ICPP 2024)&lt;/em&gt;. Our research paper proposes &lt;em&gt;VitBit&lt;/em&gt;, an efficient register operand packing scheme for embedded GPUs. &lt;em&gt;VitBit&lt;/em&gt; packs low-precision integer data for parallel computation of integer and floating-point engines. Hence, &lt;em&gt;VitBit&lt;/em&gt; can effectively increase the arithmetic density of GPU computations to improve the throughput of embedded GPUs.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to NVMSA 2024</title>
      <link>https://ku-csarch.github.io/post/accepted-nvmsa24/</link>
      <pubDate>Fri, 31 May 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-nvmsa24/</guid>
      <description>&lt;p&gt;One paper was accepted to the &lt;em&gt;the 13th IEEE Non-Volatile Memory Systems and Applications Symposium (NVMSA)&lt;/em&gt;. Our research work proposes an effieicnt garbage collection mechanism, called &lt;em&gt;ColdMap&lt;/em&gt;, which can extend the lifetime of SSD by exploiting multi-page mapping information.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Access (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-access24/</link>
      <pubDate>Mon, 11 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-access24/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Access&lt;/em&gt;. Our paper presents a scale-out DNN inference accelerator architecture, called &lt;em&gt;SAVector&lt;/em&gt;, which equips vectored systolic arrays and two-level on-chip buffer architecture. SAVector can reduce energy-delay-product (EDP) by 52% while exhibiting similar performance compared to a scale-up accelerator architecture.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to Journal of System Architecture (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-jsa24/</link>
      <pubDate>Wed, 28 Feb 2024 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-jsa24/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;Journal of System Architecture&lt;/em&gt;. Our paper presents a conflict-aware compilation approach for hierarchical register file on GPUs. By optimizing register assignments based on approximated register write counts, our proposed approach can improve the peformance of GPUs equipped with non-volatile memory-based hierarchical register file.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Embedded Systems Letters (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-esl24/</link>
      <pubDate>Tue, 19 Dec 2023 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-esl24/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Embedded Systems Letters&lt;/em&gt;. Our paper presents a kernel merge and fusion technique for multiple inference tasks in embedded GPU systems. By applying the proposed kernel merge and fusion techniques, our proposed approach can reduce the number of concurrent kernels to improve the throughput of an embedded GPU system.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to ICPP 2023</title>
      <link>https://ku-csarch.github.io/post/accepted-icpp23/</link>
      <pubDate>Fri, 16 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-icpp23/</guid>
      <description>&lt;p&gt;One paper was accepted to the &lt;em&gt;52nd International Conference on Parallel Processing (ICPP 2023)&lt;/em&gt;. Our research paper proposes &lt;em&gt;Warped-MC&lt;/em&gt;, an efficient memory controller scheme for modern GPUs. &lt;em&gt;Warped-MC&lt;/em&gt; mitigates the latency divergence observed in a warp that create multiple outstanding memory requests. Hence, &lt;em&gt;Warped-MC&lt;/em&gt; can effectively reduce a long-tail of load warp execution time to improve the overall GPU performance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Access (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-access23/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-access23/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Access&lt;/em&gt;. Our paper presents an attack scenario, called &lt;em&gt;Vizard&lt;/em&gt;, that can bypass the existing profiling-based detectors. The Vizard attack manipulate cache performance behaviors within the allowed attack windows to hide the unique performance behaviors of cache side-channel attacks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two papers accepted to IEEE Access (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-access22/</link>
      <pubDate>Fri, 21 Oct 2022 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-access22/</guid>
      <description>&lt;p&gt;Two papers were accepted to &lt;em&gt;IEEE Access&lt;/em&gt;. One paper proposes &lt;em&gt;GhostLeg&lt;/em&gt;, a low-overhead architectural defense approach against correlation-based GPU security attacks. &lt;em&gt;GhostLeg&lt;/em&gt; selectively applies secure executions for load warps to minimize performance overhead induced by concealing memory coalescing. Another paper presents detailed characteristics of GCN aggregation kernels on GPU via an in-depth analysis using real GPU hardware and a cycle-accurate GPU simulator.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to IEEE Transactions on Computers (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-tc22/</link>
      <pubDate>Sun, 13 Feb 2022 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-tc22/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;IEEE Transactions on Computers&lt;/em&gt;. Our paper proposes &lt;em&gt;FLIXR&lt;/em&gt;, an efficient in-storage indexing mechanism in SSDs. &lt;em&gt;FLIXR&lt;/em&gt; builds and maintains the page-level indexes exploiting the SSD&amp;rsquo;s native page translation structures. &lt;em&gt;FLIXR&lt;/em&gt; automatically creates and updates new per-page indexes while new data is written to flash memory pages. FLIXR&amp;rsquo;s in-storage indexes are efficiently maintained in SSD&amp;rsquo;s flash translation layer alongside with page translation structures. Hence FLIXR can effectively reduce host processor&amp;rsquo;s heavy burdens for creating and maintaining index structures of large database structures.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to ICOIN 2022</title>
      <link>https://ku-csarch.github.io/post/accepted-icoin22/</link>
      <pubDate>Tue, 07 Dec 2021 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-icoin22/</guid>
      <description>&lt;p&gt;One paper was accepted to the &lt;em&gt;Workshop on Information System Security (WISS)&lt;/em&gt; which will be held in conjunction with the &lt;em&gt;International Conference on Information Networking (ICOIN) 2022&lt;/em&gt;. Our work reveals the undo-based protection schemes are still vulnerable to the modified Prime+Probe type attack that makes the restore buffer overflowed. Using the proposed restore buffer overflow attack approach, we reveal the attack can leak part of secret data successfully even though the processor is protected by the undo-based defense scheme.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Two papers accepted to DATE 2022</title>
      <link>https://ku-csarch.github.io/post/accepted-date22/</link>
      <pubDate>Thu, 11 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-date22/</guid>
      <description>&lt;p&gt;Two papers were accepted to the &lt;em&gt;Design, Automation and Test in Europe Conference (DATE) 2022&lt;/em&gt;. One paper proposes &lt;em&gt;CacheRewinder&lt;/em&gt;, an efficient architectural defense mechanism against transient execution attacks. &lt;em&gt;CacheRewinder&lt;/em&gt; exploits the underutilized write-back buffer entries to revoke cache updates done by speculative executions. Another paper presents &lt;em&gt;Stealth ECC&lt;/em&gt;, a cost-effective and strong memory protection scheme. &lt;em&gt;Stealth ECC&lt;/em&gt; exploits not-meaningful data fields to provide stronger error correction capability.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>One paper accepted to MDPI Electronics (Journal, SCIE)</title>
      <link>https://ku-csarch.github.io/post/accepted-mdpi21/</link>
      <pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate>
      <guid>https://ku-csarch.github.io/post/accepted-mdpi21/</guid>
      <description>&lt;p&gt;One paper was accepted to &lt;em&gt;MDPI Electronics&lt;/em&gt;. Our paper proposes &lt;em&gt;RT-Sniper&lt;/em&gt;, a software-based lightweight defense solution against cache side-channel attacks. &lt;em&gt;RT-Sniper&lt;/em&gt; pinpoints attack processes efficiently using a two-phased monitoring mechanism: core-level and process-level profiling. Hence, &lt;em&gt;RT-Sniper&lt;/em&gt; can effectively detect malicious processes with negligible performance overhead.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
